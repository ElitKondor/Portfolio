{"version":3,"sources":["assets/images/Main_Photo.jpg","assets/images/game-icon.jpg","assets/images/StarWars-icon.svg","assets/images/telegram.svg","assets/images/linkedin.svg","assets/images/facebook.svg","Components/Footer.js","Components/Hero.js","Components/CardInfo.js","Components/Card.js","Components/Carousel.js","pages/HomePage.js","Components/Content.js","pages/AboutPage.js","Components/SocialMedias.js","pages/ContactPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","Container","fluid","Row","Col","md","sm","Hero","props","Jumbotron","title","subTitle","text","CardInfo","style","useSpring","opacity","from","div","href","link","target","rel","Card","onClick","e","click","item","src","imgSrc","alt","selected","Carousel","handleCardClick","id","card","console","log","items","state","forEach","setState","makeItems","map","key","gameIcon","mainPhoto","starwars","this","Component","HomePage","Content","children","AboutPage","SocialMedias","makeLinks","site","imgScr","linkedin","facebook","telegram","ContactPage","App","headerLinks","path","home","about","contact","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","to","exact","render","React","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ad741c2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Main_Photo.d3fadbb3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/game-icon.0d5472b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/StarWars-icon.12107ee4.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.a888fec0.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.20177402.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.c509a4c4.svg\";","import React from 'react';\r\nimport Container from 'react-bootstrap/Container'; \r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Footer() {\r\n\treturn (\r\n\t\t<footer className=\"mt-5\">\r\n\t\t\t<Container fluid={true}>\r\n\t\t\t\t<Row className=\"border-top justify-content-between p-3\">\r\n\t\t\t\t\t<Col className=\"p-0\" md={3} sm={12}>\r\n\t\t\t\t\t\tRuslan Mjahcich\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className=\"p-0 d-flex justify-content-end\" md={6}>\r\n\t\t\t\t\t\tCopyright Â© 2020 - Mjahcich Ruslan. All Rights Reserved.\r\n\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Hero(props) {\r\n\r\n  return (\r\n    <Jumbotron className=\"bg-transparent jumbotron-fluid p-0\">\r\n      <Container fluid={true}>\r\n        <Row className=\"justify-content-center py-5\">\r\n          <Col md={8} sm={12}>\r\n            { props.title && <h1 className=\"display-1 font-weight-bolder\">{props.title}</h1> }\r\n            { props.subTitle && <h3 className=\"display-4 font-weight-light\">{props.subTitle}</h3> }\r\n            { props.text && <h4 className=\"font-weight-light\">{props.text}</h4> }\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Jumbotron>\r\n  );\r\n\r\n}\r\n\r\nexport default Hero;\r\n","import React from 'react';\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nfunction CardInfo(props) {\r\n\r\n  const style = useSpring({opacity: 1, from: {opacity: 0}});\r\n\r\n  return (\r\n    <animated.div className=\"r-card-info\" style={style}>\r\n      <p className=\"r-card-title\">{props.title}</p>\r\n      <p className=\"r-card-sub-title\">{props.subTitle}</p>\r\n      <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">View</a>\r\n    </animated.div>\r\n  )\r\n}\r\n\r\nexport default CardInfo;\r\n","import React from 'react';\r\n\r\nimport CardInfo from './CardInfo';\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"d-inline-block r-card\" onClick={(e) => props.click(props.item)}>\r\n      <img className=\"r-card-image\" src={props.item.imgSrc} alt={props.item.imgSrc} />\r\n      { props.item.selected && <CardInfo title={props.item.title} subTitle={props.item.subTitle} link={props.item.link} />  }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport Card from './Card';\r\n\r\nimport mainPhoto from '../assets/images/Main_Photo.jpg';\r\nimport gameIcon from '../assets/images/game-icon.jpg';\r\nimport starwars from '../assets/images/StarWars-icon.svg';\r\n\r\nclass Carousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [\r\n        {\r\n          id: 0,\r\n          title: 'Color Game',\r\n          subTitle: 'Little pretty JS game',\r\n          imgSrc: gameIcon,\r\n          link: 'https://elitkondor.github.io/js-game/',\r\n          selected: false,\r\n        },\r\n        {\r\n          id: 1,\r\n          title: 'Github',\r\n          subTitle: 'My whole programmed world',\r\n          imgSrc: mainPhoto,\r\n          link: 'https://github.com/ElitKondor',\r\n          selected: false,\r\n        },\r\n        {\r\n          id: 2,\r\n          title: 'Star Wars Database',\r\n          subTitle: 'Cool React Database for Star Wars fans',\r\n          imgSrc: starwars,\r\n          link: 'https://elitkondor.github.io/StarWars-DB/',\r\n          selected: false,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  handleCardClick = (id, card) => {\r\n    console.log(id);\r\n\r\n    let items = [...this.state.items];\r\n\r\n    items[id].selected = items[id].selected ? false : true;\r\n\r\n    items.forEach((item) => {\r\n      if (item.id !== id) {\r\n        item.selected = false;\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      items,\r\n    });\r\n  };\r\n\r\n  makeItems = (items) => {\r\n    return items.map((item) => {\r\n      return (\r\n        <Card\r\n          item={item}\r\n          click={(e) => this.handleCardClick(item.id, e)}\r\n          key={item.id}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid={true}>\r\n        <Row className='justify-content-around'>\r\n          {this.makeItems(this.state.items)}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","import React from 'react';\r\n\r\nimport Hero from '../Components/Hero';\r\nimport Carousel from '../Components/Carousel';\r\n\r\nfunction HomePage(props) {\r\n\r\n  return(\r\n    <div>\r\n      <Hero title={props.title} subTitle={props.subTitle} text={props.text} />\r\n      <Carousel />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Content(props) {\r\n  return (\r\n    <Container fluid={true}>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={8}>\r\n          {props.children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport Hero from '../Components/Hero';\r\nimport Content from '../Components/Content';\r\n\r\nfunction AboutPage(props) {\r\n\r\n  return(\r\n    <div>\r\n      <Hero title={props.title} />\r\n\r\n      <Content>\r\n\t\t\t<p>Hello, my name is Ruslan. I'm a Front-End engineer with experience in HTML, CSS, Bootstrap, SASS, JavaScript, jQuery and React.</p>\r\n\r\n\t\t\t<p>My dream is to one day start my own business and become an entrepreneur.</p>\r\n\r\n\t\t\t<p>I'm constantly learning new things. Currently those things include gaining more experience with JavaScript and React.</p>\r\n    \t</Content>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default AboutPage;","import React, { Component } from 'react';\r\n\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport telegram from '../assets/images/telegram.svg';\r\nimport linkedin from '../assets/images/linkedin.svg';\r\nimport facebook from '../assets/images/facebook.svg';\r\n\r\nclass SocialMedias extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [\r\n        {\r\n          id: 0,\r\n          imgScr: linkedin,\r\n          site: 'https://www.linkedin.com/in/ruslan-m-0362b3179/'\r\n        },\r\n        {\r\n          id: 1,\r\n          imgScr: facebook,\r\n          site: 'https://www.facebook.com/profile.php?id=100005490491763'\r\n        },\r\n        {\r\n          id: 2,\r\n          imgScr: telegram,\r\n          site: 'https://t.me/angrybaker'\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  makeLinks = (items) => {\r\n    return items.map(item => {\r\n      return <a href={item.site}> <img className=\"link-img\" src={item.imgScr} alt=\"\"/> </a>\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Jumbotron className=\"bg-transparent\">\r\n        <Container>\r\n          <Row className=\"justify-content-around\">\r\n            {this.makeLinks(this.state.items)}\r\n          </Row>\r\n        </Container>\r\n      </Jumbotron>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SocialMedias;","import React, { Component } from 'react';\r\n\r\nimport SocialMedias from '../Components/SocialMedias';\r\nimport Hero from '../Components/Hero';\r\n\r\nclass ContactPage extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Hero title={this.props.title} />\r\n\r\n        <SocialMedias />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactPage;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport './App.css';\r\n\r\nimport Footer from './Components/Footer';\r\nimport HomePage from './pages/HomePage';\r\nimport AboutPage from './pages/AboutPage';\r\nimport ContactPage from './pages/ContactPage';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: 'Ruslan Mjahcich',\r\n      headerLinks: [\r\n        { title: 'Home', path: '/Portfolio' },\r\n        { title: 'About', path: '/about' },\r\n        { title: 'Contact', path: '/contact' }\r\n      ],\r\n      home: {\r\n        title: 'Be Purposeful',\r\n        subTitle: 'Projects that excite the imagination.',\r\n        text: 'Checkout my projects below'\r\n      },\r\n      about: {\r\n        title: 'About Me'\r\n      },\r\n      contact: {\r\n        title: 'Let\\'s Talk'\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Container className=\"p-0\" fluid={true}>\r\n\r\n          <Navbar className=\"border-bottom\" bg=\"transparent\" expand=\"lg\">\r\n            <Navbar.Brand>Ruslan Mjahcich</Navbar.Brand>\r\n\r\n            <Navbar.Toggle className=\"border-0\" aria-controls=\"navbar-toggle\" />\r\n            <Navbar.Collapse id=\"navbar-toggle\">\r\n              <Nav className=\"ml-auto\">\r\n                <Link className=\"nav-link\" to=\"/Portfolio\">Home</Link>\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n\r\n          <Route path=\"/Portfolio\" exact render={() => <HomePage title={this.state.home.title} subTitle={this.state.home.subTitle} text={this.state.home.text} />} />\r\n          <Route path=\"/about\" render={() => <AboutPage title={this.state.about.title} />} />\r\n          <Route path=\"/contact\" render={() => <ContactPage title={this.state.contact.title} />} />\r\n          \r\n          <Footer />\r\n\r\n        </Container>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}